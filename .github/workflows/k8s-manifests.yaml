name: k8s-manifests

on:
  pull_request:
    paths:
    - kubernetes/applications/**

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      changed-folders: ${{steps.output-step.outputs.folders}}
    steps:
      - uses: actions/checkout@v4
      - name: Setup main branch locally without switching current branch
        run: git fetch origin main:main
      - name: 'Setup jq'
        uses: dcarbone/install-jq-action@v2
      # Credit to https://www.kenmuse.com/blog/dynamic-build-matrices-in-github-actions/
      - name: 'Setup ripgrep'
        run: sudo apt-get install -y ripgrep
      - id: output-step
        name: Generate list of changed folders
        # Use ripgrep to extract application name from path aka kubernetes/applications/[group]/[application]/...
        run: |
          TARGETS=$(git diff --name-only main -- kubernetes/applications | rg 'kubernetes/applications/[\w]*/([\w-]*)/.*' -or '$1' | uniq | jq -cRn '[inputs]')
          echo "folders=$(jq -cn --argjson environments "$TARGETS" '{folder: $environments}')" >> "$GITHUB_OUTPUT"

  run-matrix:
    needs: changes
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    container:
      image: cluelesshamster86/argocd_tools:main
    strategy:
      matrix: ${{ fromJson(needs.changes.outputs.changed-folders) }}
    steps:
      - uses: actions/checkout@v4
      - name: Check if application exists
        id: application_check
        shell: bash
        run: |
          app=$(argocd app list --grpc-web --server argocd.aoach.tech --auth-token $ARGOCD_TOKEN -o yaml | yq '.[].metadata.name | select(. == "${{matrix.folder}}")')
          if [[ "${{matrix.folder}}" == "$app" ]]; then
            echo "application_found=false" >> $GITHUB_OUTPUT
          else
            echo "application_found=true" >> $GITHUB_OUTPUT
          fi
        env:
          ARGOCD_URL: ${{ secrets.ARGOCD_URL }}
          ARGOCD_TOKEN: ${{ secrets.ARGOCD_TOKEN }}
      - name: Get manifests
        run: |
          argocd app manifests --grpc-web --server $ARGOCD_URL --auth-token $ARGOCD_TOKEN $(basename ${{matrix.folder}}) --revision $GITHUB_SHA >> manifests.yaml
        env:
          ARGOCD_URL: ${{ secrets.ARGOCD_URL }}
          ARGOCD_TOKEN: ${{ secrets.ARGOCD_TOKEN }}
        if: ${{ steps.application_check.outputs.application_fund }} == "true"
      - name: Run Kubeconform.
        run: kubeconform -ignore-missing-schemas manifests.yaml
        if: ${{ steps.application_check.outputs.application_fund }} == "true"
      - name: Get ArgoCD diff
        id: diff
        continue-on-error: true
        run: |
          set +e
          argocd app diff --grpc-web --server $ARGOCD_URL --auth-token $ARGOCD_TOKEN $(basename ${{matrix.folder}}) --refresh --revision $GITHUB_SHA >> k8s.diff
          exitcode="$?"
          echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
          exit "$exitcode"
        env:
          ARGOCD_URL: ${{ secrets.ARGOCD_URL }}
          ARGOCD_TOKEN: ${{ secrets.ARGOCD_TOKEN }}
        if: ${{ steps.application_check.outputs.application_fund }} == "true"
      - name: Generate report
        run: gomplate -f /argocd_diff/diff.md.tmpl -o diff.md -d diff=k8s.diff?type=text/plain
        env:
          APPLICAITON_PATH: ${{matrix.folder}}
        if: ${{ steps.application_check.outputs.application_fund }} == "true"
      - name: Post diff if exists
        if: |
          steps.diff.outputs.exitcode == 1 &&
          ${{ steps.application_check.outputs.application_fund }} == "true"
        run: |
          cat diff.md | github-commenter \
            -token $GITHUB_TOKEN \
            -owner $GITHUB_REPOSITORY_OWNER \
            -repo $(basename $GITHUB_REPOSITORY) \
            -type pr \
            -number ${{github.event.pull_request.number}} \
            -edit-comment-regex "ArgoCD Diff Report - ${{matrix.folder}}"
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Fail on CLI failure
        if: |
          steps.diff.outputs.exitcode == 2 &&
          ${{ steps.application_check.outputs.application_fund }} == "true"
        run: exit 1
